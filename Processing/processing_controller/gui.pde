/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */
// Bei Button Klick schreibe dem Arduino Ã¼ber myPort 'dieInfo' und zeichne dementsprechend die LED und resete die anderen 
public void b_blue_click(GButton source, GEvent event) { //_CODE_:b_blue:614671:
  println("b_blue - GButton >> GEvent." + event + " @ " + millis());
  myPort.write('0');
  ledCol =5;
  ledBlue.zeichnen();
  ledYellow.reset();
  ledGreen.reset();
  ledRed.reset();
} //_CODE_:b_blue:614671:

public void b_red_click(GButton source, GEvent event) { //_CODE_:b_red:564421:
  println("b_red - GButton >> GEvent." + event + " @ " + millis());
  myPort.write('1');
  ledCol =5;
  ledBlue.reset();
  ledYellow.reset();
  ledGreen.reset();
  ledRed.zeichnen();
} //_CODE_:b_red:564421:

public void button3_click1(GButton source, GEvent event) { //_CODE_:b_green:399496:
  println("b_green - GButton >> GEvent." + event + " @ " + millis());
  myPort.write('2');
  ledCol =5;
  ledGreen.zeichnen();
  ledBlue.reset();
  ledYellow.reset();
  ledRed.reset();
} //_CODE_:b_green:399496:

public void b_yellow_click(GButton source, GEvent event) { //_CODE_:b_yellow:964908:
  println("b_yellow - GButton >> GEvent." + event + " @ " + millis());
  myPort.write('3');
  ledBlue.reset();
  ledGreen.reset();
  ledRed.reset();
  ledCol =5;
  ledYellow.zeichnen();
} //_CODE_:b_yellow:964908:

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:hotSeat:447810:
  appc.background(230);
} //_CODE_:hotSeat:447810:

public void b_onePlayer_click1(GButton source, GEvent event) { //_CODE_:b_onePlayer:674403:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  initPlayerMode(1);
} //_CODE_:b_onePlayer:674403:

public void b_twoPlayer_click1(GButton source, GEvent event) { //_CODE_:b_twoPlayer:438751:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
  initPlayerMode(2);
} //_CODE_:b_twoPlayer:438751:

public void b_threePlayer_click2(GButton source, GEvent event) { //_CODE_:b_threePlayer:450687:
  println("button3 - GButton >> GEvent." + event + " @ " + millis());
  initPlayerMode(3);
} //_CODE_:b_threePlayer:450687:

public void b_fourPlayer_click1(GButton source, GEvent event) { //_CODE_:b_fourPlayer:872897:
  println("button4 - GButton >> GEvent." + event + " @ " + millis());
  initPlayerMode(4);
} //_CODE_:b_fourPlayer:872897:

public void b_PvP_click1(GButton source, GEvent event) { //_CODE_:b_PvP:540584:
  println("button5 - GButton >> GEvent." + event + " @ " + millis());
  
} //_CODE_:b_PvP:540584:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  b_blue = new GButton(this, 300, 65, 80, 30);
  b_blue.setText("Blue LED");
  b_blue.addEventHandler(this, "b_blue_click");
  b_red = new GButton(this, 300, 99, 80, 30);
  b_red.setText("Red LED");
  b_red.setLocalColorScheme(GCScheme.RED_SCHEME);
  b_red.addEventHandler(this, "b_red_click");
  b_green = new GButton(this, 300, 135, 80, 30);
  b_green.setText("Green LED");
  b_green.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  b_green.addEventHandler(this, "button3_click1");
  b_yellow = new GButton(this, 300, 170, 80, 30);
  b_yellow.setText("Yellow LED");
  b_yellow.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  b_yellow.addEventHandler(this, "b_yellow_click");
  hotSeat = GWindow.getWindow(this, "HotSeat", 0, 0, 300, 120, JAVA2D);
  hotSeat.noLoop();
  hotSeat.addDrawHandler(this, "win_draw1");
  b_onePlayer = new GButton(hotSeat, 10, 9, 54, 30);
  b_onePlayer.setText("1 Spieler");
  b_onePlayer.addEventHandler(this, "b_onePlayer_click1");
  b_twoPlayer = new GButton(hotSeat, 70, 10, 63, 30);
  b_twoPlayer.setText("2 Spieler");
  b_twoPlayer.addEventHandler(this, "b_twoPlayer_click1");
  b_threePlayer = new GButton(hotSeat, 137, 10, 65, 30);
  b_threePlayer.setText("3 Spieler");
  b_threePlayer.addEventHandler(this, "b_threePlayer_click2");
  b_fourPlayer = new GButton(hotSeat, 206, 10, 66, 30);
  b_fourPlayer.setText("4 Spieler");
  b_fourPlayer.addEventHandler(this, "b_fourPlayer_click1");
  b_PvP = new GButton(hotSeat, 97, 70, 80, 30);
  b_PvP.setText("PvP");
  b_PvP.addEventHandler(this, "b_PvP_click1");
  hotSeat.loop();
}

// Variable declarations 
// autogenerated do not edit
GButton b_blue; 
GButton b_red; 
GButton b_green; 
GButton b_yellow; 
GWindow hotSeat;
GButton b_onePlayer; 
GButton b_twoPlayer; 
GButton b_threePlayer; 
GButton b_fourPlayer; 
GButton b_PvP; 